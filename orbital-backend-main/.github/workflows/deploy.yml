name: Django Backend CI/CD

on:
  push:
    branches:
      - main  # or your default branch

env:
  DB_HOST: ${{ secrets.DB_HOST }}
  DB_NAME: ${{ secrets.DB_NAME }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DB_PORT: ${{ secrets.DB_PORT }}
  DB_USER: ${{ secrets.DB_USER }}
  DEFAULT_FROM_EMAIL: ${{ secrets.DEFAULT_FROM_EMAIL }}
  DO_SERVER_IP: ${{ secrets.DO_SERVER_IP }}
  DO_SSH_PRIVATE_KEY: ${{ secrets.DO_SSH_PRIVATE_KEY }}
  DO_SSH_USER: ${{ secrets.DO_SSH_USER }}
  EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
  ONEMAP_API_PASSWORD: ${{ secrets.ONEMAP_API_PASSWORD }}
  SECRET_KEY: ${{ secrets.SECRET_KEY }}
  DJANGO_SETTINGS_MODULE: backend.settings
  PYTHONPATH: ${{ github.workspace }}
  SENDINBLUE_API_KEY: ${{ secrets.SENDINBLUE_API_KEY }} 

jobs:
  deploy:
    environment: production
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        
      - name: Print ALLOWED_HOSTS
        run: echo "ALLOWED_HOSTS=$ALLOWED_HOSTS"

      - name: List repo root files (debug)
        run: ls -la

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests (optional)
        run: python manage.py test

      - name: Deploy to DigitalOcean Droplet via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.DO_SERVER_IP }}
          username: ${{ secrets.DO_SSH_USER }}
          key: ${{ secrets.DO_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd /home/deployer/orbital-backend
            git pull origin main 
            source /home/deployer/orbital-backend/env/bin/activate
            pip install -r requirements.txt
            python3 manage.py migrate
            python3 manage.py collectstatic --noinput
            sudo systemctl restart gunicorn
            sudo systemctl restart nginx